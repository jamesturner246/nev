[tool.poetry]
name = "nev"
version = "0.1.0"
description = "[Description for project.]"
authors = [
    "James Paul Turner <jamesturner246@gmail.com>"
]

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mypy = "^0.10.3"
pytest-mock = "^3.14.0"
pre-commit = "^3.8.0"
ruff = "^0.6.8"
djlint = "^1.35.2"
django-stubs = { extras = ["compatible-mypy"], version = "^5.1" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
disallow_any_explicit = true
disallow_any_generics = true
warn_unreachable = true
warn_unused_ignores = true
disallow_untyped_defs = true
exclude = [".venv/", "docs/"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
addopts = "-v --mypy -p no:warnings --cov=nev --cov-report=html --doctest-modules --ignore=nev/__main__.py"

[tool.ruff]
target-version = "py312"
exclude = ["*/migrations"]

[tool.ruff.lint]
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "RUF"  # ruff
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D100", "D104"] # Missing docstring in public module, Missing docstring in public package

[tool.djlint]
profile="django"
indent=2
